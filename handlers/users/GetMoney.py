import hashlib
import string
from datetime import datetime, timedelta
import random

import requests
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove
from aiogram.utils.markdown import hbold, hunderline, hlink

from keyboards.default.back_to_menu import buttons_menu
from keyboards.default.buttons_menu import main_keyboard
from keyboards.default.done import done
from keyboards.default.get_money import get_money
from loader import dp
from states import Test
from utils.db_api.PostgreSQL import subscriber_exists, get_trans, update_balance, delete_trans, select_all_rev, get_lk, \
    update_rev_balance, add_stop, update_only_balance, add_get_money


@dp.message_handler(text="–í—ã–≤–æ–¥‚ôªÔ∏è")
async def GetMoney(message: types.Message):
    if int(list(await subscriber_exists(message.from_user.id))[0][-1]) != 1:
        if len(list(await get_trans(str(message.from_user.id)))) != 0:
            await message.answer(f"""
–ë–æ—Ç –≤ —Ä–∞–±–æ—Ç–µ ‚ùóÔ∏è
üó£ –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ç–∞–≤–æ–∫ –∏ –Ω–∞–∂–º–∏—Ç–µ stop.
–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏ :
–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç 
–í—ã–≤–æ–¥ 
Support""")
        else:
            balance = list(await get_lk(message.from_user.id))[0][1]
            if int(balance) == 0:
                await message.answer(f"""
üì≤–í—ã–≤–æ–¥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω 
–ë–∞–ª–∞–Ω—Å: 0
üó£–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å .""")
            else:
                await message.answer("""
–ó–∞–∫–∞–∑ –≤—ã–ø–ª–∞—Ç—ã üì≤
–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± ‚§µÔ∏è
""", reply_markup=get_money)
    else:
        await message.answer(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´!")


@dp.message_handler(text="–ö–∞—Ä—Ç—ã (RU,UK,KZ,EU)")
async def GetMoneyCard(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –ö–∞—Ä—Ç—ã ‚§µÔ∏è", reply_markup=buttons_menu)
    await Test.Q_for_get_money.set()


@dp.message_handler(text="Qiwi")
async def GetMoneyQiwi(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä Qiwi ‚§µÔ∏è", reply_markup=buttons_menu)
    await Test.Q_for_get_money.set()


@dp.message_handler(text="YooMoney")
async def GetMoneyYooMoney(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä YooMoney ‚§µÔ∏è", reply_markup=buttons_menu)
    await Test.Q_for_get_money.set()


@dp.message_handler(text="Perfect money")
async def GetMoneyPerfect(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä Perfect money ‚§µÔ∏è", reply_markup=buttons_menu)
    await Test.Q_for_get_money.set()


@dp.message_handler(text="BTC")
async def GetMoneyBTC(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä BTC ‚§µÔ∏è", reply_markup=buttons_menu)
    await Test.Q_for_get_money.set()


@dp.message_handler(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def GetMoneyBTC(message: types.Message):
    await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é', reply_markup=main_keyboard)


@dp.message_handler(state=Test.Q_for_get_money)
async def GetMoney1(message: types.Message, state: FSMContext):
    if message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é', reply_markup=main_keyboard)
        await state.finish()
    else:
        try:
            if len(message.text) != 16:
                await message.answer("–ù–µ–∫–æ—Ä—Ä–µ—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã", reply_markup=main_keyboard)
                await state.finish()
            else:
                t = int(message.text)
                info = list(await get_lk(message.from_user.id))[0]
                await message.answer(f"""
–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞ ‚ôªÔ∏è
–ë–∞–ª–∞–Ω—Å : {info[1]}""")
                await Test.Q_for_get_money2.set()
        except:
            await message.answer("–ù–µ–∫–æ—Ä—Ä–µ—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã", reply_markup=main_keyboard)
            await state.finish()


@dp.message_handler(state=Test.Q_for_get_money2)
async def GetMoney2(message: types.Message, state: FSMContext):
    info = list(await get_lk(message.from_user.id))[0]
    try:
        await update_only_balance(message.from_user.id, int(info[1]) - int(message.text))
        time = 15
        end = datetime.now() + timedelta(minutes=int(time))
        await add_get_money(message.from_user.id, end.strftime("%Y-%m-%d %H:%M"))
        await message.answer("""
–í—ã–≤–æ–¥ —Å–æ–∑–¥–∞–Ω üü¢
–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç 
1 - 10 –º–∏–Ω—É—Ç ‚ôªÔ∏è
–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã ‚ùóÔ∏è""", reply_markup=main_keyboard)
    except:
        await message.answer("–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞. –ü–æ–≤—Ç–æ—Ä–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ", reply_markup=main_keyboard)
    await state.finish()

