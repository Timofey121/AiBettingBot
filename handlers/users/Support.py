# -*- coding: utf8 -*-

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove

from data.config import ADMINS
from keyboards.default.buttons_menu import main_keyboard
from keyboards.default.back_to_menu import buttons_menu
from loader import dp
from states import Test
from utils.db_api.PostgreSQL import subscriber_exists, get_trans


@dp.message_handler(text="Supportüßë‚Äçüíª", state=None)
async def technical_support(message: types.Message):
    if int(list(await subscriber_exists(message.from_user.id))[0][-1]) != 1:
        if len(list(await get_trans(str(message.from_user.id)))) != 0:
            await message.answer(f"""
–ë–æ—Ç –≤ —Ä–∞–±–æ—Ç–µ ‚ùóÔ∏è
üó£ –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ç–∞–≤–æ–∫ –∏ –Ω–∞–∂–º–∏—Ç–µ stop.
–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏ :
–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç 
–í—ã–≤–æ–¥ 
Support""")
        else:
            if message.from_user.username is None:
                await message.answer(f"–ü—Ä–∏–≤–µ—Ç, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ —Å–º–æ–∂–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å –í–∞–º, —Ç.–∫. —É –í–∞—Å –Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
                                     f"–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è!")
                photo = open('handlers/users/img.png', 'rb')
                await message.answer_photo(photo, reply_markup=main_keyboard)
            else:
                await message.answer("–ü—Ä–∏–≤–µ—Ç, —Ä–∞—Å—Å–∫–∞–∂–∏ –≤ —á–µ–º –ø—Ä–æ–±–ª–µ–º–∞? –ú—ã –æ—Ç–≤–µ—Ç–∏–º –í–∞–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∑–∞–∫–æ–Ω—á–∏–º"
                                     " —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–º –≤–æ–ø—Ä–æ—Å–æ–º!", reply_markup=buttons_menu)
                await Test.Q_for_tech_support.set()
    else:
        await message.answer(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´!")


@dp.message_handler(state=Test.Q_for_tech_support)
async def technical_support_1(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é', reply_markup=main_keyboard)
        await state.finish()
    else:
        await message.answer("–í–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.", reply_markup=main_keyboard)
        for admin in ADMINS:
            try:
                await dp.bot.send_message(admin,
                                          f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤:\n"
                                          f"Full_name = {message.from_user.full_name}\n"
                                          f"is_bot = {'–ù–µ –±–æ—Ç!' if message.from_user.is_bot is False else '–ë–æ—Ç!'}\n"
                                          f"User_name = @{'–ù–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è' if message.from_user.username is None else message.from_user.username}\n"
                                          f"id = {message.from_user.id}\n"
                                          f"Language = {message.from_user.language_code}\n\n"
                                          f"–ï–≥–æ –ø—Ä–æ—Å—å–±–∞:\n"
                                          f"{answer}")
            except Exception as err:
                pass
        await state.finish()
